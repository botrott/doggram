{"ast":null,"code":"import { URL } from \"./constants\";\n\nconst checkResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return res.json().then(err => Promise.reject(err));\n};\n\nconst headersWithContentType = {\n  \"Content-Type\": \"application/json\"\n};\nexport const registerUser = (username, password) => {\n  return fetch(`${URL}/api/users/`, {\n    method: \"POST\",\n    headers: headersWithContentType,\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }).then(checkResponse);\n};\nexport const loginUser = (username, password) => {\n  return fetch(`${URL}/api/token/login/`, {\n    method: \"POST\",\n    headers: headersWithContentType,\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }).then(checkResponse).then(data => {\n    if (data.auth_token) {\n      localStorage.setItem(\"auth_token\", data.auth_token);\n      return data;\n    }\n\n    return null;\n  });\n};\nexport const logoutUser = () => {\n  return fetch(`${URL}/api/token/logout/`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Token ${localStorage.getItem(\"auth_token\")}`\n    }\n  }).then(res => {\n    if (res.status === 204) {\n      localStorage.removeItem(\"auth_token\");\n      return res;\n    }\n\n    return null;\n  });\n};\nexport const getUser = () => {\n  return fetch(`${URL}/api/users/me/`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Token ${localStorage.getItem(\"auth_token\")}`\n    }\n  }).then(checkResponse);\n};\nexport const getCards = function () {\n  let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  return fetch(`${URL}/api/dogs/?page=${page}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Token ${localStorage.getItem(\"auth_token\")}`\n    }\n  }).then(checkResponse);\n};\nexport const getCard = id => {\n  return fetch(`${URL}/api/dogs/${id}/`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Token ${localStorage.getItem(\"auth_token\")}`\n    }\n  }).then(checkResponse);\n};\nexport const getAchievements = () => {\n  return fetch(`${URL}/api/achievements/`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Token ${localStorage.getItem(\"auth_token\")}`\n    }\n  }).then(checkResponse);\n};\nexport const sendCard = card => {\n  return fetch(`${URL}/api/dogs/`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Token ${localStorage.getItem(\"auth_token\")}`\n    },\n    body: JSON.stringify(card)\n  }).then(checkResponse);\n};\nexport const updateCard = (card, id) => {\n  return fetch(`${URL}/api/dogs/${id}/`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Token ${localStorage.getItem(\"auth_token\")}`\n    },\n    body: JSON.stringify(card)\n  }).then(checkResponse);\n};\nexport const deleteCard = id => {\n  return fetch(`${URL}/api/dogs/${id}/`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Token ${localStorage.getItem(\"auth_token\")}`\n    }\n  }).then(res => {\n    if (res.status === 204) {\n      return {\n        status: true\n      };\n    }\n\n    return {\n      status: false\n    };\n  });\n};","map":{"version":3,"sources":["/home/botrott/PycharmProjects/doggram/dog_frontend/src/utils/api.js"],"names":["URL","checkResponse","res","ok","json","then","err","Promise","reject","headersWithContentType","registerUser","username","password","fetch","method","headers","body","JSON","stringify","loginUser","data","auth_token","localStorage","setItem","logoutUser","authorization","getItem","status","removeItem","getUser","getCards","page","getCard","id","getAchievements","sendCard","card","updateCard","deleteCard"],"mappings":"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","sourcesContent":["import { URL } from \"./constants\";\n\nconst checkResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  return res.json().then((err) => Promise.reject(err));\n};\nconst headersWithContentType = { \"Content-Type\": \"application/json\" };\n\nexport const registerUser = (username, password) => {\n  return fetch(`${URL}/api/users/`, {\n    method: \"POST\",\n    headers: headersWithContentType,\n    body: JSON.stringify({ username, password }),\n  }).then(checkResponse);\n};\n\nexport const loginUser = (username, password) => {\n  return fetch(`${URL}/api/token/login/`, {\n    method: \"POST\",\n    headers: headersWithContentType,\n    body: JSON.stringify({ username, password }),\n  })\n    .then(checkResponse)\n    .then((data) => {\n      if (data.auth_token) {\n        localStorage.setItem(\"auth_token\", data.auth_token);\n        return data;\n      }\n      return null;\n    });\n};\n\nexport const logoutUser = () => {\n  return fetch(`${URL}/api/token/logout/`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Token ${localStorage.getItem(\"auth_token\")}`,\n    },\n  }).then((res) => {\n    if (res.status === 204) {\n      localStorage.removeItem(\"auth_token\");\n      return res;\n    }\n    return null;\n  });\n};\n\nexport const getUser = () => {\n  return fetch(`${URL}/api/users/me/`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Token ${localStorage.getItem(\"auth_token\")}`,\n    },\n  }).then(checkResponse);\n};\n\nexport const getCards = (page = 1) => {\n  return fetch(`${URL}/api/dogs/?page=${page}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Token ${localStorage.getItem(\"auth_token\")}`,\n    },\n  }).then(checkResponse);\n};\n\nexport const getCard = (id) => {\n  return fetch(`${URL}/api/dogs/${id}/`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Token ${localStorage.getItem(\"auth_token\")}`,\n    },\n  }).then(checkResponse);\n};\n\nexport const getAchievements = () => {\n  return fetch(`${URL}/api/achievements/`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Token ${localStorage.getItem(\"auth_token\")}`,\n    },\n  }).then(checkResponse);\n};\n\nexport const sendCard = (card) => {\n  return fetch(`${URL}/api/dogs/`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Token ${localStorage.getItem(\"auth_token\")}`,\n    },\n    body: JSON.stringify(card),\n  }).then(checkResponse);\n};\n\nexport const updateCard = (card, id) => {\n  return fetch(`${URL}/api/dogs/${id}/`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Token ${localStorage.getItem(\"auth_token\")}`,\n    },\n    body: JSON.stringify(card),\n  }).then(checkResponse);\n};\n\nexport const deleteCard = (id) => {\n  return fetch(`${URL}/api/dogs/${id}/`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Token ${localStorage.getItem(\"auth_token\")}`,\n    },\n  }).then((res) => {\n    if (res.status === 204) {\n      return { status: true };\n    }\n    return { status: false };\n  });\n};\n"]},"metadata":{},"sourceType":"module"}