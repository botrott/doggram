{"ast":null,"code":"var _jsxFileName = \"/home/botrott/Dev/kittygram_frontend/src/components/main-page/main-page.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { getCards } from \"../../utils/api\";\nimport { MainCard } from \"../main-card/main-card\";\nimport { PaginationBox } from \"../pagination-box/pagination-box\";\nimport styles from \"./main-page.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainPage = _ref => {\n  _s();\n\n  let {\n    queryPage,\n    setQueryPage,\n    extraClass = \"\"\n  } = _ref;\n  const [cards, setCards] = React.useState([]);\n  const [pagData, setPagData] = React.useState({});\n  React.useEffect(() => {\n    getCards(queryPage).then(res => {\n      setPagData({\n        count: res.count,\n        pages: Math.ceil(res.count / 10)\n      });\n      setCards(res.results);\n    }).catch(err => {\n      if (err.detail === \"Invalid page.\") {\n        getCards(queryPage - 1).then(res => {\n          setQueryPage(queryPage - 1);\n          setPagData({\n            count: res.count,\n            pages: Math.ceil(res.count / 10)\n          });\n          setCards(res.results);\n        }).catch(err => {\n          console.error(err);\n        });\n      } else {\n        console.error(err);\n      }\n    });\n  }, [queryPage, setQueryPage]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: `${styles.content} ${extraClass}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `text text_type_h2 text_color_primary mt-25 mb-20 ${styles.title}`,\n      children: \"\\u0421\\u043E\\u0431\\u0430\\u043A\\u0435\\u043D\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.box,\n      children: cards.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(MainCard, {\n          cardId: item.id,\n          img: item.image,\n          name: item.name,\n          date: item.birth_year,\n          color: item.color\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), pagData.count > 10 && /*#__PURE__*/_jsxDEV(PaginationBox, {\n      data: pagData,\n      queryPage: queryPage,\n      setQueryPage: setQueryPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainPage, \"/ozVY7aHCG9hkvvgJiaxz+IkoOg=\");\n\n_c = MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/home/botrott/Dev/kittygram_frontend/src/components/main-page/main-page.jsx"],"names":["React","getCards","MainCard","PaginationBox","styles","MainPage","queryPage","setQueryPage","extraClass","cards","setCards","useState","pagData","setPagData","useEffect","then","res","count","pages","Math","ceil","results","catch","err","detail","console","error","content","title","box","map","item","index","id","image","name","birth_year","color"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { getCards } from \"../../utils/api\";\n\nimport { MainCard } from \"../main-card/main-card\";\nimport { PaginationBox } from \"../pagination-box/pagination-box\";\n\nimport styles from \"./main-page.module.css\";\n\nexport const MainPage = ({ queryPage, setQueryPage, extraClass = \"\" }) => {\n  const [cards, setCards] = React.useState([]);\n  const [pagData, setPagData] = React.useState({});\n\n  React.useEffect(() => {\n    getCards(queryPage)\n      .then((res) => {\n        setPagData({\n          count: res.count,\n          pages: Math.ceil(res.count / 10),\n        });\n        setCards(res.results);\n      })\n      .catch((err) => {\n        if (err.detail === \"Invalid page.\") {\n          getCards(queryPage - 1)\n            .then((res) => {\n              setQueryPage(queryPage - 1);\n              setPagData({\n                count: res.count,\n                pages: Math.ceil(res.count / 10),\n              });\n              setCards(res.results);\n            })\n            .catch((err) => {\n              console.error(err);\n            });\n        } else {\n          console.error(err);\n        }\n      });\n  }, [queryPage, setQueryPage]);\n\n  return (\n    <section className={`${styles.content} ${extraClass}`}>\n      <h2\n        className={`text text_type_h2 text_color_primary mt-25 mb-20 ${styles.title}`}\n      >\n        Собакены\n      </h2>\n      <div className={styles.box}>\n        {cards.map((item, index) => {\n          return (\n            <MainCard\n              cardId={item.id}\n              key={index}\n              img={item.image}\n              name={item.name}\n              date={item.birth_year}\n              color={item.color}\n            />\n          );\n        })}\n      </div>\n      {pagData.count > 10 && (\n        <PaginationBox\n          data={pagData}\n          queryPage={queryPage}\n          setQueryPage={setQueryPage}\n        />\n      )}\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}